<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>code - Tag - Mackenzie Morgan</title><link>https://mackenzie.morgan.name/tags/code/</link><description>code - Tag - Mackenzie Morgan</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 26 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://mackenzie.morgan.name/tags/code/" rel="self" type="application/rss+xml"/><item><title>Reusable Django Admin Filters</title><link>https://mackenzie.morgan.name/posts/reusable-django-admin-filters/</link><pubDate>Tue, 26 Oct 2021 00:00:00 +0000</pubDate><author>Author</author><guid>https://mackenzie.morgan.name/posts/reusable-django-admin-filters/</guid><description>It&amp;rsquo;s fairly common to have a many-to-many connection to a User model. But sometimes, you have a lot of users in that table.
Problem 1: relations to large tables are unwieldy If we let the Django Admin load every single user into the dropdown in the Django Admin, it&amp;rsquo;s unusable. The dropdowns are too long. The page takes too long to load. We need to filter it in advance.
Dig around a bit online, and you&amp;rsquo;ll find some code of this form:</description></item><item><title>Elixir Wizards Talk: "Dealing With a Monster Ecto Query"</title><link>https://mackenzie.morgan.name/posts/elixir-wizards-talk/</link><pubDate>Thu, 29 Jul 2021 00:27:31 -0400</pubDate><author>Author</author><guid>https://mackenzie.morgan.name/posts/elixir-wizards-talk/</guid><description>Last month, I spoke at the first-ever Elixir Wizards Conference. It was a lightning talk walking through a refactor I did before the 2020 US Presidential Election, titled &amp;ldquo;Dealing With a Monster Ecto Query.&amp;rdquo;
I work for a news company, so the presidential election is a huge deal; we can&amp;rsquo;t have downtime. I knew which query was our bottleneck, so I optimized it right before the election. This took advantage of a few Elixir features, like atoms, the pin operator, and concurrency primitives.</description></item><item><title>Start of a List</title><link>https://mackenzie.morgan.name/posts/start-of-a-list/</link><pubDate>Tue, 18 May 2021 22:16:01 -0400</pubDate><author>Author</author><guid>https://mackenzie.morgan.name/posts/start-of-a-list/</guid><description>Elixir has a lot of ways to get the first thing in a list. One of the first things you learn from the basic syntax guide on the Elixir website is that hd(foo) gets the first thing in a list, and tl(foo) gets the rest. You also learn [ head | tail ] = foo.
But what happens when it&amp;rsquo;s an empty list?
iex(1)&amp;gt; foo = [] [] iex(2)&amp;gt; hd(foo) ** (ArgumentError) argument error :erlang.</description></item><item><title>Django Admin color picker</title><link>https://mackenzie.morgan.name/posts/django-admin-color-picker/</link><pubDate>Fri, 06 Nov 2020 03:09:31 -0500</pubDate><author>Author</author><guid>https://mackenzie.morgan.name/posts/django-admin-color-picker/</guid><description><![CDATA[When I add a new model to the Django app at work, I try to make sure the results in the Django admin have good usability, too. Just because it&rsquo;ll be mainly developers (and a few project managers) seeing it doesn&rsquo;t mean I can neglect usability. Consequently, I spend some time on hacking the Django admin. My manager says I&rsquo;ve been making it do things he didn&rsquo;t even realize were possible.]]></description></item></channel></rss>