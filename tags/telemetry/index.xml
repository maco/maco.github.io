<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>telemetry - Tag - Mackenzie Morgan</title><link>https://mackenzie.morgan.name/tags/telemetry/</link><description>telemetry - Tag - Mackenzie Morgan</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 27 Oct 2021 10:14:01 -0400</lastBuildDate><atom:link href="https://mackenzie.morgan.name/tags/telemetry/" rel="self" type="application/rss+xml"/><item><title>Pretty Waterfalls in Honeycomb for an Absinthe app</title><link>https://mackenzie.morgan.name/posts/pretty-waterfalls-in-honeycomb/</link><pubDate>Wed, 27 Oct 2021 10:14:01 -0400</pubDate><author>Author</author><guid>https://mackenzie.morgan.name/posts/pretty-waterfalls-in-honeycomb/</guid><description>When first setting up the Absinthe app I work on, someone added OpenCensus Honeycomb package. The way it was set up was very basic: each top-level query had tracing attached.
:object queries do field :getStuff, :stuff do meta :trace, true arg :input, :string resolve &amp;amp;Resolver.stuff_resolver/3 end end This got us information on how long each query took, so we could see which query needed to be optimized and do some debugging when performance issues hit.</description></item></channel></rss>